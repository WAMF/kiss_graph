openapi: 3.0.3
info:
  title: Graph Node Service
  version: 0.2.0
  description: A service for managing hierarchical graph-based nodes with path indexing and ancestry tracing.

paths:
  /nodes:
    post:
      summary: Create a new node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeCreate'
      responses:
        '201':
          description: Node created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'

  /nodes/{id}:
    get:
      summary: Get a node by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Node found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        '404':
          description: Node not found
    patch:
      summary: Update a node (content or pathHash only)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeUpdate'
      responses:
        '200':
          description: Node updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
    delete:
      summary: Delete a node
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Node deleted
        '409':
          description: Node has children (deletion blocked)

  /nodes/{id}/children:
    get:
      summary: Get children of a node
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of child nodes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'

  /nodes/{id}/trace:
    get:
      summary: Trace the node path back to the root
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of ancestor nodes from the given node back to root
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'

  /nodes/path/{prefix}:
    get:
      summary: Query nodes by pathHash prefix
      description: Find all nodes whose pathHash starts with the given prefix (e.g., prefix "1" matches "1", "1.1", "1.2.3")
      parameters:
        - in: path
          name: prefix
          required: true
          schema:
            type: string
          description: The pathHash prefix to search for
      responses:
        '200':
          description: List of nodes with matching pathHash prefix
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'

components:
  schemas:
    Node:
      type: object
      properties:
        id:
          type: string
          description: Unique node identifier
        root:
          type: string
          description: ID of the root node of this graph
        previous:
          type: string
          nullable: true
          description: ID of the parent node (null for root nodes)
        pathHash:
          type: string
          description: Hierarchical dot-notation path (e.g., "1.2.3")
        content:
          type: object
          additionalProperties: true
          description: Arbitrary JSON object representing the node payload
    NodeCreate:
      type: object
      required: [previous, content]
      properties:
        previous:
          type: string
          description: ID of the parent node (empty string for root nodes)
        pathHash:
          type: string
          description: Optional custom pathHash (auto-generated if not provided)
        content:
          type: object
          additionalProperties: true
          description: Arbitrary JSON object representing the node payload
    NodeUpdate:
      type: object
      properties:
        pathHash:
          type: string
          description: New pathHash for the node
        content:
          type: object
          additionalProperties: true
          description: New content for the node
